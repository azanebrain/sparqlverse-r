library(ggplot2)
library(shiny)
library(SPARQL)

endpoint <- "http://ws-azane:8080/runQuery.html"

# Define server logic
shinyServer(function(input, output) {
  
  queryTemplate <-
    "select ?requestnum(sum(?idle)as?idle)(sum(?utime)as?user)(sum(?stime)as?sys)(sum(?iowait)as?iowait) 
    where { table 'str_core_recent' } 
    group by ?requestnum order by ?requestnum"
  query <-reactive({paste(queryTemplate)})
  
                    
  results <-reactive({SPARQL(endpoint, query())$results})
  
  output$resultsPlot <- renderPlot({
    p <- ggplot(results(), aes(x=requestnum, y=idle, group=1)) +
      geom_point() +
      stat_smooth() +
      scale_x_continuous(breaks=seq(1, 2008, 50)) +
      xlab("Request Num") +
      ylab("Size")
    print(p)
  }, width = "auto", height = 600)
  
  output$resultsTable <- renderDataTable({
    results()
  })
  
  output$SPARQLquery <- renderText({
    query()
  })

})
